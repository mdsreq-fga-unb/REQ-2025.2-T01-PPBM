name: ppbm-dev

services:
  db:
    image: postgres:16-alpine
    container_name: ppbm-postgres
    env_file:
      - ./apps/server/.env
    environment:
      POSTGRES_DB: backend
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  server:
    build:
      context: ./apps/server
      dockerfile: apps/server/Dockerfile.dev
    container_name: ppbm-server
    env_file:
      - ./apps/server/.env
    environment:
      NODE_ENV: development
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./apps/server/src:/app/apps/server/src
      - ./apps/server/prisma:/app/apps/server/prisma
    working_dir: /app
    command: ["pnpm", "exec", "tsx", "watch", "apps/server/src/index.ts"]

  client:
    build:
      context: ./apps/client
      dockerfile: apps/client/Dockerfile.dev
    container_name: ppbm-client
    env_file:
      - ./apps/client/.env
    ports:
      - "4321:4321"
    depends_on:
      - server
    volumes:
      - ./apps/client/src:/app/apps/client/src
      - ./apps/client/public:/app/apps/client/public
    working_dir: /app/apps/client
    command: ["pnpm", "exec", "astro", "dev", "--host", "0.0.0.0"]

volumes:
  db_data:


